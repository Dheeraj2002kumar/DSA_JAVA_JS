<mxfile host="65bd71144e">
    <diagram id="SgA_qAOusEtsAZYRhVHF" name="Page-1">
        <mxGraphModel dx="1015" dy="542" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
            <root>
                <mxCell id="0"/>
                <mxCell id="1" parent="0"/>
                <mxCell id="2" value="&lt;font color=&quot;#ffff00&quot; style=&quot;font-size: 36px;&quot;&gt;&lt;b style=&quot;&quot;&gt;Algorithms_and_Problem_solving_patterns&lt;/b&gt;&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
                    <mxGeometry x="50" y="30" width="770" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="3" value="&lt;font color=&quot;#ff0000&quot;&gt;&lt;b&gt;OBJECTIVES&lt;/b&gt;&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=36;fontColor=#FFFF00;" parent="1" vertex="1">
                    <mxGeometry x="110" y="110" width="250" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="4" value="&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;font-size: 18px; color: rgb(255, 255, 255); background-color: initial;&quot;&gt;--&amp;gt; Define what an algoriithm is&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;font style=&quot;font-size: 18px;&quot; color=&quot;#ffffff&quot;&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;--&amp;gt; Devise a plan to solve algorithms&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;--&amp;gt; Compare and contrast problem solving&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;patters including frequency counters, two&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;pointer problems and divide and conquer&lt;/span&gt;&lt;/div&gt;&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=36;fontColor=#FF0000;" parent="1" vertex="1">
                    <mxGeometry x="80" y="160" width="360" height="140" as="geometry"/>
                </mxCell>
                <mxCell id="5" value="&lt;font style=&quot;color: rgb(0, 255, 255); font-size: 36px;&quot;&gt;WHAT IS AN&amp;nbsp;&lt;br&gt;ALGORITHM?&lt;br&gt;&lt;/font&gt;A process or set of steps to&amp;nbsp;&lt;br&gt;accomplsh a certain task." style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=18;fontColor=#FFFFFF;" parent="1" vertex="1">
                    <mxGeometry x="90" y="340" width="260" height="140" as="geometry"/>
                </mxCell>
                <mxCell id="6" value="&lt;font color=&quot;#0000cc&quot;&gt;Why do I need to know this?&lt;/font&gt;&lt;br&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;Almost everything that you do in programming involves&lt;br&gt;&lt;/font&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;some kind of algorithm!&lt;br&gt;&lt;/font&gt;&lt;font size=&quot;3&quot;&gt;It's&amp;nbsp; tha foundation for being a successful problem solving and developer Also..&lt;br&gt;&lt;/font&gt;&lt;font color=&quot;#ff0080&quot;&gt;INTERVIEWS&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=36;fontColor=#FFFFFF;" parent="1" vertex="1">
                    <mxGeometry x="50" y="520" width="580" height="230" as="geometry"/>
                </mxCell>
                <mxCell id="7" value="&lt;font color=&quot;#00ffff&quot;&gt;HOW DO YOU IMPROVE?&lt;/font&gt;&lt;br&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;font color=&quot;#ffffff&quot;&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;1. Devise a plan for solving problems.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2. Master common problem solving patterns&lt;/span&gt;&lt;/div&gt;&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=18;fontColor=#FF0080;" parent="1" vertex="1">
                    <mxGeometry x="155" y="770" width="370" height="100" as="geometry"/>
                </mxCell>
                <mxCell id="8" value="&lt;font color=&quot;#ffff00&quot;&gt;A simple, Foolproof, Magical, Miraculous, Fail-Self Approach&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=18;fontColor=#FFFFFF;" parent="1" vertex="1">
                    <mxGeometry x="100" y="880" width="500" height="40" as="geometry"/>
                </mxCell>
                <mxCell id="9" value="&lt;font color=&quot;#66cc00&quot;&gt;PROBLEM SOLVING&lt;/font&gt;&lt;br&gt;&lt;font color=&quot;#ffffff&quot;&gt;&lt;br&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;--&amp;gt; Understand the problem&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;--&amp;gt; Explore Concrete Examples&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;--&amp;gt; Break it Down&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;--&amp;gt; Solve/Simplify&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;--&amp;gt; Look back and Refactor&lt;/span&gt;&lt;/div&gt;&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=18;fontColor=#FFFF00;" parent="1" vertex="1">
                    <mxGeometry x="230" y="940" width="270" height="160" as="geometry"/>
                </mxCell>
                <mxCell id="10" value="Note: many of these strategies are&lt;br&gt;adapted from &lt;font color=&quot;#00ffff&quot;&gt;George Polya&lt;/font&gt;, whose&amp;nbsp;&lt;br&gt;book How to solve It is a great&amp;nbsp;&lt;br&gt;reesource for anyone who wants to&amp;nbsp;&lt;br&gt;become a beeter problem solver" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=18;fontColor=#FFFFFF;" parent="1" vertex="1">
                    <mxGeometry x="230" y="1120" width="310" height="120" as="geometry"/>
                </mxCell>
                <mxCell id="11" value="&lt;font style=&quot;font-size: 24px;&quot;&gt;UNDERSTAND THE&amp;nbsp; PROBLEM&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=18;fontColor=#00FFFF;" parent="1" vertex="1">
                    <mxGeometry x="155" y="1280" width="370" height="40" as="geometry"/>
                </mxCell>
                <mxCell id="12" value="&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;color: rgb(255, 255, 255); background-color: initial;&quot;&gt;1. Can i restate the problem in my own words?&lt;/span&gt;&lt;/div&gt;&lt;font color=&quot;#ffffff&quot;&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2. What are the input that go into the problem?&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3. what are outputs that should come from the&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&#9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space-collapse: collapse;&quot;&gt;solution to the problem?&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;4. Can the outputs be determined from the inputs? In&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&#9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space-collapse: collapse;&quot;&gt;other words, do I have enough information to solve the&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&#9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space-collapse: collapse;&quot;&gt;problem? (You may not be able to answer this question&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&#9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space-collapse: collapse;&quot;&gt;until&amp;nbsp; you set about solving the problem. That's okay; it's&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&#9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space-collapse: collapse;&quot;&gt;still worth considering the question at this early stage.)&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;5. How should II&amp;nbsp; lable the&amp;nbsp; important pieces of data that are&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&#9;&lt;/span&gt;&lt;span style=&quot;background-color: initial; white-space-collapse: collapse;&quot;&gt;a part of the problem?&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=24;fontColor=#00FFFF;" parent="1" vertex="1">
                    <mxGeometry x="100" y="1340" width="670" height="330" as="geometry"/>
                </mxCell>
                <mxCell id="13" value="&lt;div style=&quot;color: rgb(201, 209, 217); background-color: rgb(13, 17, 23); font-family: Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 14px; line-height: 19px;&quot;&gt;&lt;br&gt;&lt;div&gt;&lt;span style=&quot;color: #8b949e;&quot;&gt;// method 3&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ec8e2c;&quot;&gt;function&lt;/span&gt; &lt;span style=&quot;color: #d2a8ff;&quot;&gt;charCount3&lt;/span&gt;(&lt;span style=&quot;color: #fdac54;&quot;&gt;str&lt;/span&gt;){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;var&lt;/span&gt; obj &lt;span style=&quot;color: #ec8e2c;&quot;&gt;=&lt;/span&gt; {};&lt;/div&gt;&lt;div&gt;&amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;for&lt;/span&gt;(&lt;span style=&quot;color: #ec8e2c;&quot;&gt;var&lt;/span&gt; char &lt;span style=&quot;color: #ec8e2c;&quot;&gt;of&lt;/span&gt; &lt;span style=&quot;color: #fdac54;&quot;&gt;str&lt;/span&gt;){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;if&lt;/span&gt;(&lt;span style=&quot;color: #d2a8ff;&quot;&gt;isAlphaNumeric&lt;/span&gt;(char)){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; char &lt;span style=&quot;color: #ec8e2c;&quot;&gt;=&lt;/span&gt; char.&lt;span style=&quot;color: #d2a8ff;&quot;&gt;toLowerCase&lt;/span&gt;();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; obj[char] &lt;span style=&quot;color: #ec8e2c;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;++&lt;/span&gt;obj[char] &lt;span style=&quot;color: #ec8e2c;&quot;&gt;||&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;return&lt;/span&gt; obj;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;br&gt;&lt;div&gt;&lt;span style=&quot;color: #ec8e2c;&quot;&gt;function&lt;/span&gt; &lt;span style=&quot;color: #d2a8ff;&quot;&gt;isAlphaNumeric&lt;/span&gt;(&lt;span style=&quot;color: #fdac54;&quot;&gt;char&lt;/span&gt;){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;var&lt;/span&gt; code &lt;span style=&quot;color: #ec8e2c;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #fdac54;&quot;&gt;char&lt;/span&gt;.&lt;span style=&quot;color: #d2a8ff;&quot;&gt;charCodeAt&lt;/span&gt;(&lt;span style=&quot;color: #79c0ff;&quot;&gt;0&lt;/span&gt;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;if&lt;/span&gt;(&lt;span style=&quot;color: #ec8e2c;&quot;&gt;!&lt;/span&gt;(code &lt;span style=&quot;color: #ec8e2c;&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;47&lt;/span&gt; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; code &lt;span style=&quot;color: #ec8e2c;&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;58&lt;/span&gt;) &lt;span style=&quot;color: #ec8e2c;&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&quot;color: #8b949e;&quot;&gt;// numeric (0-9)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;!&lt;/span&gt;(code &lt;span style=&quot;color: #ec8e2c;&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;64&lt;/span&gt; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; code &lt;span style=&quot;color: #ec8e2c;&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;91&lt;/span&gt;) &lt;span style=&quot;color: #ec8e2c;&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&quot;color: #8b949e;&quot;&gt;// upper alphabate (A-Z)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;!&lt;/span&gt;(code &lt;span style=&quot;color: #ec8e2c;&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;96&lt;/span&gt; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; code &lt;span style=&quot;color: #ec8e2c;&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;123&lt;/span&gt;)){ &lt;span style=&quot;color: #8b949e;&quot;&gt;// lower alphabate (a-z)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;false&lt;/span&gt;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;true&lt;/span&gt;;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #79c0ff;&quot;&gt;console&lt;/span&gt;.&lt;span style=&quot;color: #d2a8ff;&quot;&gt;log&lt;/span&gt;(&lt;span style=&quot;color: #d2a8ff;&quot;&gt;charCount3&lt;/span&gt;(&lt;span style=&quot;color: #a5d6ff;&quot;&gt;&quot;Hello WORLD hii!!!&quot;&lt;/span&gt;));&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #79c0ff;&quot;&gt;console&lt;/span&gt;.&lt;span style=&quot;color: #d2a8ff;&quot;&gt;log&lt;/span&gt;(&lt;span style=&quot;color: #a5d6ff;&quot;&gt;&quot;hi&quot;&lt;/span&gt;.&lt;span style=&quot;color: #d2a8ff;&quot;&gt;charCodeAt&lt;/span&gt;(&lt;span style=&quot;color: #79c0ff;&quot;&gt;0&lt;/span&gt;)); &amp;nbsp;&lt;span style=&quot;color: #8b949e;&quot;&gt;// 104&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
                    <mxGeometry x="30" y="1690" width="460" height="470" as="geometry"/>
                </mxCell>
                <mxCell id="14" value="&lt;div style=&quot;color: rgb(201, 209, 217); background-color: rgb(13, 17, 23); font-family: Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 14px; line-height: 19px;&quot;&gt;&lt;br&gt;&lt;div&gt;&lt;span style=&quot;color: #8b949e;&quot;&gt;// method 2&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ec8e2c;&quot;&gt;function&lt;/span&gt; &lt;span style=&quot;color: #d2a8ff;&quot;&gt;charCount2&lt;/span&gt;(&lt;span style=&quot;color: #fdac54;&quot;&gt;str&lt;/span&gt;){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;var&lt;/span&gt; obj &lt;span style=&quot;color: #ec8e2c;&quot;&gt;=&lt;/span&gt; {};&lt;/div&gt;&lt;div&gt;&amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;for&lt;/span&gt;(&lt;span style=&quot;color: #ec8e2c;&quot;&gt;var&lt;/span&gt; i&lt;span style=&quot;color: #ec8e2c;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: #79c0ff;&quot;&gt;0&lt;/span&gt;; i&lt;span style=&quot;color: #ec8e2c;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #fdac54;&quot;&gt;str&lt;/span&gt;.&lt;span style=&quot;color: #79c0ff;&quot;&gt;length&lt;/span&gt;; i&lt;span style=&quot;color: #ec8e2c;&quot;&gt;++&lt;/span&gt;){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;var&lt;/span&gt; char &lt;span style=&quot;color: #ec8e2c;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #fdac54;&quot;&gt;str&lt;/span&gt;[i].&lt;span style=&quot;color: #d2a8ff;&quot;&gt;toLowerCase&lt;/span&gt;();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;if&lt;/span&gt;(&lt;span style=&quot;color: #a5d6ff;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color: #79c0ff;&quot;&gt;[a-z 0-9]&lt;/span&gt;&lt;span style=&quot;color: #a5d6ff;&quot;&gt;/&lt;/span&gt;.&lt;span style=&quot;color: #d2a8ff;&quot;&gt;test&lt;/span&gt;(char)){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;if&lt;/span&gt;(obj[char] &lt;span style=&quot;color: #ec8e2c;&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;0&lt;/span&gt;) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; obj[char]&lt;span style=&quot;color: #ec8e2c;&quot;&gt;++&lt;/span&gt;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; } &lt;span style=&quot;color: #ec8e2c;&quot;&gt;else&lt;/span&gt; {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; obj[char] &lt;span style=&quot;color: #ec8e2c;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; };&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ec8e2c;&quot;&gt;return&lt;/span&gt; obj;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;br&gt;&lt;div&gt;&lt;span style=&quot;color: #8b949e;&quot;&gt;// console.log(charCount2(&quot;hello hii!&quot;));&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
                    <mxGeometry x="570" y="1690" width="340" height="360" as="geometry"/>
                </mxCell>
                <mxCell id="15" value="&lt;div style=&quot;color: rgb(201, 209, 217); background-color: rgb(13, 17, 23); font-family: Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 14px; line-height: 19px;&quot;&gt;&lt;div&gt;&lt;span style=&quot;color: #8b949e;&quot;&gt;//Algorithms_and_Problem_solving_patterns&lt;/span&gt;&lt;/div&gt;&lt;br&gt;&lt;div&gt;&lt;span style=&quot;color: #8b949e;&quot;&gt;// Write a function which takes in a string and returns counts of each character in the string.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ec8e2c;&quot;&gt;function&lt;/span&gt; &lt;span style=&quot;color: #d2a8ff;&quot;&gt;charCount&lt;/span&gt;(&lt;span style=&quot;color: #fdac54;&quot;&gt;str&lt;/span&gt;) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;let&lt;/span&gt; charCountDict &lt;span style=&quot;color: #ec8e2c;&quot;&gt;=&lt;/span&gt; {};&lt;/div&gt;&lt;div&gt;&amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;for&lt;/span&gt; (&lt;span style=&quot;color: #ec8e2c;&quot;&gt;let&lt;/span&gt; char &lt;span style=&quot;color: #ec8e2c;&quot;&gt;of&lt;/span&gt; &lt;span style=&quot;color: #fdac54;&quot;&gt;str&lt;/span&gt;) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;if&lt;/span&gt; (char &lt;span style=&quot;color: #ec8e2c;&quot;&gt;in&lt;/span&gt; charCountDict) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; charCountDict[char] &lt;span style=&quot;color: #ec8e2c;&quot;&gt;+=&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; } &lt;span style=&quot;color: #ec8e2c;&quot;&gt;else&lt;/span&gt; {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; charCountDict[char] &lt;span style=&quot;color: #ec8e2c;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;return&lt;/span&gt; charCountDict;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #8b949e;&quot;&gt;// Test the function&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #8b949e;&quot;&gt;// console.log(charCount(&quot;Hello, World!1111665&quot;));&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #8b949e;&quot;&gt;// Output: { H: 1, e: 1, l: 3, &lt;/span&gt;&lt;/div&gt;&lt;br&gt;&lt;div&gt;&lt;span style=&quot;color: #ec8e2c;&quot;&gt;function&lt;/span&gt; &lt;span style=&quot;color: #d2a8ff;&quot;&gt;charCount1&lt;/span&gt;(&lt;span style=&quot;color: #fdac54;&quot;&gt;str&lt;/span&gt;){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &lt;span style=&quot;color: #8b949e;&quot;&gt;// make object to return at end&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;let&lt;/span&gt; result &lt;span style=&quot;color: #ec8e2c;&quot;&gt;=&lt;/span&gt; {};&lt;/div&gt;&lt;div&gt;&amp;nbsp; &lt;span style=&quot;color: #8b949e;&quot;&gt;// loop over string, for each character...&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;for&lt;/span&gt;(&lt;span style=&quot;color: #ec8e2c;&quot;&gt;var&lt;/span&gt; i&lt;span style=&quot;color: #ec8e2c;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: #79c0ff;&quot;&gt;0&lt;/span&gt;; i &lt;span style=&quot;color: #ec8e2c;&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&quot;color: #fdac54;&quot;&gt;str&lt;/span&gt;.&lt;span style=&quot;color: #79c0ff;&quot;&gt;length&lt;/span&gt;; i&lt;span style=&quot;color: #ec8e2c;&quot;&gt;++&lt;/span&gt;){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;var&lt;/span&gt; char &lt;span style=&quot;color: #ec8e2c;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #fdac54;&quot;&gt;str&lt;/span&gt;[i].&lt;span style=&quot;color: #d2a8ff;&quot;&gt;toLowerCase&lt;/span&gt;();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #8b949e;&quot;&gt;// if the char is a number/letter AND is a key in object, add one to count&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;if&lt;/span&gt;(result[char] &lt;span style=&quot;color: #ec8e2c;&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;0&lt;/span&gt;){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; result[char]&lt;span style=&quot;color: #ec8e2c;&quot;&gt;++&lt;/span&gt;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #8b949e;&quot;&gt;// if the char is a number/ letter AND not in object, add it to object and set value to 1&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;else&lt;/span&gt; {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; result[char] &lt;span style=&quot;color: #ec8e2c;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;br&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #8b949e;&quot;&gt;// if character is something else (space, period, etc.) don't do anything&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #8b949e;&quot;&gt;// return object at end&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;return&lt;/span&gt; result;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #8b949e;&quot;&gt;// Test the function&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #8b949e;&quot;&gt;// console.log(charCount1(&quot;Hello, World!1111665&quot;));&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
                    <mxGeometry x="50" y="2220" width="750" height="770" as="geometry"/>
                </mxCell>
                <mxCell id="16" value="&lt;font color=&quot;#00ffff&quot;&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;RECAP!&lt;br&gt;&lt;/font&gt;&lt;br&gt;&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
                    <mxGeometry x="205" y="3020" width="110" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="17" value="&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;color: rgb(255, 255, 255); background-color: initial;&quot;&gt;--&amp;gt; Understand the problem&lt;/span&gt;&lt;/div&gt;&lt;font color=&quot;#ffffff&quot;&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;--&amp;gt; Explore concrete Examples&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;--&amp;gt; Break it Down&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;--&amp;gt; Solve / simplify&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;--&amp;gt; Look Back and Refactor&lt;/span&gt;&lt;/div&gt;&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=24;fontColor=#00FFFF;" vertex="1" parent="1">
                    <mxGeometry x="80" y="3070" width="350" height="160" as="geometry"/>
                </mxCell>
                <mxCell id="18" value="&lt;font color=&quot;#00ffff&quot;&gt;Some Ptterns....&lt;/font&gt;&lt;br&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;--&amp;gt; Frequency Counter&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;--&amp;gt; Multiple Pointers&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;--&amp;gt; Sliding Window&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;--&amp;gt; Divide and Conquer&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;--&amp;gt; Dynamic Programming&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;--&amp;gt; Greedy algorithms&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;--&amp;gt; Backtracking&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;--&amp;gt; many more1&lt;/span&gt;&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=24;fontColor=#FFFFFF;" vertex="1" parent="1">
                    <mxGeometry x="85" y="3320" width="300" height="270" as="geometry"/>
                </mxCell>
                <mxCell id="19" value="FREQUENCY COUNTERS&lt;br&gt;&lt;br&gt;&lt;font color=&quot;#ffffff&quot;&gt;This pattern uses objects or sets to collect&amp;nbsp;&lt;br&gt;values/frequencies of values&lt;br&gt;&lt;br&gt;This can often avoid the need for&amp;nbsp;&lt;br&gt;nested loops or O(N^2) operations&lt;br&gt;with arrays / strings&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=24;fontColor=#00FFFF;" vertex="1" parent="1">
                    <mxGeometry x="90" y="3610" width="480" height="240" as="geometry"/>
                </mxCell>
                <mxCell id="20" value="&lt;font color=&quot;#ffff00&quot;&gt;AN EXAMPLE&lt;/font&gt;&lt;br&gt;&lt;br&gt;Write a function colled same, which accepts two arrays,&amp;nbsp;&lt;br&gt;The function should return true if every value in the&amp;nbsp;&lt;br&gt;array has it's corresponding value squared in the second array.&amp;nbsp;&lt;br&gt;The frequency of values must be the same." style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=24;fontColor=#FFFFFF;" vertex="1" parent="1">
                    <mxGeometry x="60" y="3890" width="700" height="190" as="geometry"/>
                </mxCell>
                <mxCell id="21" value="&lt;div style=&quot;color: rgb(201, 209, 217); background-color: rgb(13, 17, 23); font-family: Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 14px; line-height: 19px;&quot;&gt;&lt;br&gt;&lt;div&gt;&lt;span style=&quot;color: #d2a8ff;&quot;&gt;same&lt;/span&gt;([&lt;span style=&quot;color: #79c0ff;&quot;&gt;1&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;2&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;3&lt;/span&gt;], [&lt;span style=&quot;color: #79c0ff;&quot;&gt;4&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;1&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;9&lt;/span&gt;]); &amp;nbsp; &lt;span style=&quot;color: #8b949e;&quot;&gt;// true&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #d2a8ff;&quot;&gt;same&lt;/span&gt;([, &lt;span style=&quot;color: #79c0ff;&quot;&gt;2&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;3&lt;/span&gt;], [&lt;span style=&quot;color: #79c0ff;&quot;&gt;1&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;9&lt;/span&gt;]); &amp;nbsp; &lt;span style=&quot;color: #8b949e;&quot;&gt;// false&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #d2a8ff;&quot;&gt;same&lt;/span&gt;([&lt;span style=&quot;color: #79c0ff;&quot;&gt;1&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;2&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;1&lt;/span&gt;], [&lt;span style=&quot;color: #79c0ff;&quot;&gt;4&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;4&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;1&lt;/span&gt;]) &amp;nbsp; &amp;nbsp;&lt;span style=&quot;color: #8b949e;&quot;&gt;// false (must be same frequency)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=24;fontColor=#FFFF00;" vertex="1" parent="1">
                    <mxGeometry x="150" y="4090" width="510" height="90" as="geometry"/>
                </mxCell>
                <mxCell id="22" value="&lt;div style=&quot;color: rgb(201, 209, 217); background-color: rgb(13, 17, 23); font-family: Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 14px; line-height: 19px;&quot;&gt;&lt;div&gt;&lt;span style=&quot;color: #ec8e2c;&quot;&gt;function&lt;/span&gt; &lt;span style=&quot;color: #d2a8ff;&quot;&gt;same&lt;/span&gt;(&lt;span style=&quot;color: #fdac54;&quot;&gt;arr1&lt;/span&gt;, &lt;span style=&quot;color: #fdac54;&quot;&gt;arr2&lt;/span&gt;){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;if&lt;/span&gt;(&lt;span style=&quot;color: #fdac54;&quot;&gt;arr1&lt;/span&gt;.&lt;span style=&quot;color: #79c0ff;&quot;&gt;length&lt;/span&gt; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;!==&lt;/span&gt; &lt;span style=&quot;color: #fdac54;&quot;&gt;arr2&lt;/span&gt;.&lt;span style=&quot;color: #79c0ff;&quot;&gt;length&lt;/span&gt;) &lt;span style=&quot;color: #ec8e2c;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;false&lt;/span&gt;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;for&lt;/span&gt;(&lt;span style=&quot;color: #ec8e2c;&quot;&gt;let&lt;/span&gt; i &lt;span style=&quot;color: #ec8e2c;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;0&lt;/span&gt;; i &lt;span style=&quot;color: #ec8e2c;&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&quot;color: #fdac54;&quot;&gt;arr1&lt;/span&gt;.&lt;span style=&quot;color: #79c0ff;&quot;&gt;length&lt;/span&gt;; i&lt;span style=&quot;color: #ec8e2c;&quot;&gt;++&lt;/span&gt;){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;let&lt;/span&gt; correctIndex &lt;span style=&quot;color: #ec8e2c;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #fdac54;&quot;&gt;arr2&lt;/span&gt;.&lt;span style=&quot;color: #d2a8ff;&quot;&gt;indexOf&lt;/span&gt;(&lt;span style=&quot;color: #fdac54;&quot;&gt;arr1&lt;/span&gt;[i] &lt;span style=&quot;color: #ec8e2c;&quot;&gt;**&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;2&lt;/span&gt;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;if&lt;/span&gt;(correctIndex &lt;span style=&quot;color: #ec8e2c;&quot;&gt;===&lt;/span&gt; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color: #79c0ff;&quot;&gt;1&lt;/span&gt;) &lt;span style=&quot;color: #ec8e2c;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;false&lt;/span&gt;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #fdac54;&quot;&gt;arr2&lt;/span&gt;.&lt;span style=&quot;color: #d2a8ff;&quot;&gt;splice&lt;/span&gt;(correctIndex, &lt;span style=&quot;color: #79c0ff;&quot;&gt;1&lt;/span&gt;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;true&lt;/span&gt;;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #8b949e;&quot;&gt;// Time Complexity - N^2&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #8b949e;&quot;&gt;// Space Complexity - N&lt;/span&gt;&lt;/div&gt;&lt;br&gt;&lt;div&gt;&lt;span style=&quot;color: #79c0ff;&quot;&gt;console&lt;/span&gt;.&lt;span style=&quot;color: #d2a8ff;&quot;&gt;log&lt;/span&gt;(&lt;span style=&quot;color: #d2a8ff;&quot;&gt;same&lt;/span&gt;([&lt;span style=&quot;color: #79c0ff;&quot;&gt;1&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;2&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;3&lt;/span&gt;], [&lt;span style=&quot;color: #79c0ff;&quot;&gt;4&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;1&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;9&lt;/span&gt;]));&lt;/div&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=24;fontColor=#FFFF00;" vertex="1" parent="1">
                    <mxGeometry x="170" y="4230" width="410" height="260" as="geometry"/>
                </mxCell>
                <mxCell id="23" value="&lt;div style=&quot;color: rgb(201, 209, 217); background-color: rgb(13, 17, 23); font-family: Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 14px; line-height: 19px;&quot;&gt;&lt;div&gt;&lt;span style=&quot;color: #8b949e;&quot;&gt;// REFACTORED&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ec8e2c;&quot;&gt;function&lt;/span&gt; &lt;span style=&quot;color: #d2a8ff;&quot;&gt;same1&lt;/span&gt;(&lt;span style=&quot;color: #fdac54;&quot;&gt;arr1&lt;/span&gt;, &lt;span style=&quot;color: #fdac54;&quot;&gt;arr2&lt;/span&gt;){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;if&lt;/span&gt;(&lt;span style=&quot;color: #fdac54;&quot;&gt;arr1&lt;/span&gt;.&lt;span style=&quot;color: #79c0ff;&quot;&gt;length&lt;/span&gt; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;!==&lt;/span&gt; &lt;span style=&quot;color: #fdac54;&quot;&gt;arr2&lt;/span&gt;.&lt;span style=&quot;color: #79c0ff;&quot;&gt;length&lt;/span&gt;) &lt;span style=&quot;color: #ec8e2c;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;false&lt;/span&gt;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;let&lt;/span&gt; frequencyCounter1 &lt;span style=&quot;color: #ec8e2c;&quot;&gt;=&lt;/span&gt; {};&lt;/div&gt;&lt;div&gt;&amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;let&lt;/span&gt; frequencyCounter2 &lt;span style=&quot;color: #ec8e2c;&quot;&gt;=&lt;/span&gt; {};&lt;/div&gt;&lt;br&gt;&lt;div&gt;&amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;for&lt;/span&gt;(&lt;span style=&quot;color: #ec8e2c;&quot;&gt;let&lt;/span&gt; val &lt;span style=&quot;color: #ec8e2c;&quot;&gt;of&lt;/span&gt; &lt;span style=&quot;color: #fdac54;&quot;&gt;arr1&lt;/span&gt;){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; frequencyCounter1[val] &lt;span style=&quot;color: #ec8e2c;&quot;&gt;=&lt;/span&gt; (frequencyCounter1[val] &lt;span style=&quot;color: #ec8e2c;&quot;&gt;||&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;0&lt;/span&gt;) &lt;span style=&quot;color: #ec8e2c;&quot;&gt;+&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;br&gt;&lt;div&gt;&amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;for&lt;/span&gt;(&lt;span style=&quot;color: #ec8e2c;&quot;&gt;let&lt;/span&gt; val &lt;span style=&quot;color: #ec8e2c;&quot;&gt;of&lt;/span&gt; &lt;span style=&quot;color: #fdac54;&quot;&gt;arr2&lt;/span&gt;){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; frequencyCounter2[val] &lt;span style=&quot;color: #ec8e2c;&quot;&gt;=&lt;/span&gt; (frequencyCounter2[val] &lt;span style=&quot;color: #ec8e2c;&quot;&gt;||&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;0&lt;/span&gt;) &lt;span style=&quot;color: #ec8e2c;&quot;&gt;+&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;br&gt;&lt;div&gt;&amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;for&lt;/span&gt;(&lt;span style=&quot;color: #ec8e2c;&quot;&gt;let&lt;/span&gt; key &lt;span style=&quot;color: #ec8e2c;&quot;&gt;in&lt;/span&gt; frequencyCounter1){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;if&lt;/span&gt;(&lt;span style=&quot;color: #ec8e2c;&quot;&gt;!&lt;/span&gt;(key &lt;span style=&quot;color: #ec8e2c;&quot;&gt;**&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;2&lt;/span&gt; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;in&lt;/span&gt; frequencyCounter2)){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;false&lt;/span&gt;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;if&lt;/span&gt;(frequencyCounter2[key &lt;span style=&quot;color: #ec8e2c;&quot;&gt;**&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;2&lt;/span&gt;] &lt;span style=&quot;color: #ec8e2c;&quot;&gt;!==&lt;/span&gt; frequencyCounter1[key]){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;false&lt;/span&gt;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;true&lt;/span&gt;;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #8b949e;&quot;&gt;// Time Complexity - N&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #8b949e;&quot;&gt;// Space Complexity - N&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #79c0ff;&quot;&gt;console&lt;/span&gt;.&lt;span style=&quot;color: #d2a8ff;&quot;&gt;log&lt;/span&gt;(&lt;span style=&quot;color: #d2a8ff;&quot;&gt;same1&lt;/span&gt;([&lt;span style=&quot;color: #79c0ff;&quot;&gt;1&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;2&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;3&lt;/span&gt;], [&lt;span style=&quot;color: #79c0ff;&quot;&gt;4&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;1&lt;/span&gt;,&lt;span style=&quot;color: #79c0ff;&quot;&gt;9&lt;/span&gt;]));&lt;/div&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=24;fontColor=#FFFF00;" vertex="1" parent="1">
                    <mxGeometry x="120" y="4560" width="510" height="530" as="geometry"/>
                </mxCell>
                <mxCell id="24" value="&lt;b&gt;REFACTORED&lt;/b&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=24;fontColor=#FFFF00;" vertex="1" parent="1">
                    <mxGeometry x="270" y="4510" width="190" height="40" as="geometry"/>
                </mxCell>
                <mxCell id="25" value="NAIVE" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=24;fontColor=#FFFF00;" vertex="1" parent="1">
                    <mxGeometry x="270" y="4180" width="100" height="40" as="geometry"/>
                </mxCell>
                <mxCell id="26" value="ANAGRAMS" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=24;fontColor=#FFFF00;" vertex="1" parent="1">
                    <mxGeometry x="370" y="5520" width="160" height="40" as="geometry"/>
                </mxCell>
                <mxCell id="27" value="&lt;font color=&quot;#ffffff&quot;&gt;Given two strings, write a function to determine if the second&amp;nbsp;&lt;br&gt;string is an anagram of the first. An anagram is&lt;br&gt;a word, phrase, or name formed by rearranging the&amp;nbsp;&lt;br&gt;letters of another, such as cinema, formed from iceman.&lt;br&gt;&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=24;fontColor=#FFFF00;" vertex="1" parent="1">
                    <mxGeometry x="100" y="5570" width="670" height="130" as="geometry"/>
                </mxCell>
                <mxCell id="28" value="&lt;div style=&quot;color: rgb(201, 209, 217); background-color: rgb(13, 17, 23); font-family: Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 14px; line-height: 19px;&quot;&gt;&lt;div&gt;&lt;span style=&quot;color: #8b949e;&quot;&gt;// ANAGRAMS&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #8b949e;&quot;&gt;//Given two strings, write a function to determine if the second string is an anagram of the first.&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #8b949e;&quot;&gt;//An anagram is a word, phrase, or name formed by rearranging the letters of another, such as cinema, formed from iceman.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #8b949e;&quot;&gt;// validAnagram('', ''); // true&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #8b949e;&quot;&gt;// validAnagram('aaz', 'zza'); // false&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #8b949e;&quot;&gt;// validAnagram('anagram', 'nagaram'); // true&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #8b949e;&quot;&gt;// validAnagram('rat', 'car'); &amp;nbsp; // false&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #8b949e;&quot;&gt;// validAnagram('awesome', 'awesom'); // false&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #8b949e;&quot;&gt;// validAnagram('qwerty', 'qeywrt'); &amp;nbsp; // true&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #8b949e;&quot;&gt;// validAnagram('texttwisttime', 'timetwisttext'); // true&lt;/span&gt;&lt;/div&gt;&lt;br&gt;&lt;div&gt;&lt;span style=&quot;color: #ec8e2c;&quot;&gt;function&lt;/span&gt; &lt;span style=&quot;color: #d2a8ff;&quot;&gt;validAnagram&lt;/span&gt;(&lt;span style=&quot;color: #fdac54;&quot;&gt;first&lt;/span&gt;, &lt;span style=&quot;color: #fdac54;&quot;&gt;second&lt;/span&gt;){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;if&lt;/span&gt;(&lt;span style=&quot;color: #fdac54;&quot;&gt;first&lt;/span&gt;.&lt;span style=&quot;color: #79c0ff;&quot;&gt;length&lt;/span&gt; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;!==&lt;/span&gt; &lt;span style=&quot;color: #fdac54;&quot;&gt;second&lt;/span&gt;.&lt;span style=&quot;color: #79c0ff;&quot;&gt;length&lt;/span&gt;) &lt;span style=&quot;color: #ec8e2c;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;false&lt;/span&gt;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;const&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;lookup&lt;/span&gt; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;=&lt;/span&gt; {};&lt;/div&gt;&lt;br&gt;&lt;div&gt;&amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;for&lt;/span&gt;(&lt;span style=&quot;color: #ec8e2c;&quot;&gt;let&lt;/span&gt; i &lt;span style=&quot;color: #ec8e2c;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;0&lt;/span&gt;; i &lt;span style=&quot;color: #ec8e2c;&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&quot;color: #fdac54;&quot;&gt;first&lt;/span&gt;.&lt;span style=&quot;color: #79c0ff;&quot;&gt;length&lt;/span&gt;; i&lt;span style=&quot;color: #ec8e2c;&quot;&gt;++&lt;/span&gt;){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;let&lt;/span&gt; letter &lt;span style=&quot;color: #ec8e2c;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #fdac54;&quot;&gt;first&lt;/span&gt;[i];&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #8b949e;&quot;&gt;// if letter exists, increment, otherwise set to 1&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #79c0ff;&quot;&gt;lookup&lt;/span&gt;[letter] &lt;span style=&quot;color: #ec8e2c;&quot;&gt;?&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;lookup&lt;/span&gt;[letter] &lt;span style=&quot;color: #ec8e2c;&quot;&gt;+=&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;1&lt;/span&gt; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;lookup&lt;/span&gt;[letter] &lt;span style=&quot;color: #ec8e2c;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;br&gt;&lt;div&gt;&amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;for&lt;/span&gt;(&lt;span style=&quot;color: #ec8e2c;&quot;&gt;let&lt;/span&gt; i &lt;span style=&quot;color: #ec8e2c;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;0&lt;/span&gt;; i &lt;span style=&quot;color: #ec8e2c;&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&quot;color: #fdac54;&quot;&gt;second&lt;/span&gt;.&lt;span style=&quot;color: #79c0ff;&quot;&gt;length&lt;/span&gt;; i&lt;span style=&quot;color: #ec8e2c;&quot;&gt;++&lt;/span&gt;){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;let&lt;/span&gt; letter &lt;span style=&quot;color: #ec8e2c;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #fdac54;&quot;&gt;second&lt;/span&gt;[i];&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #8b949e;&quot;&gt;// can't find letter or letter is zero then it's not an anagram&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #8b949e;&quot;&gt;// if letter exists, decrement, otherwise return false&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;if&lt;/span&gt;(&lt;span style=&quot;color: #ec8e2c;&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color: #79c0ff;&quot;&gt;lookup&lt;/span&gt;[letter]){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;false&lt;/span&gt;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; } &lt;span style=&quot;color: #ec8e2c;&quot;&gt;else&lt;/span&gt; {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #79c0ff;&quot;&gt;lookup&lt;/span&gt;[letter] &lt;span style=&quot;color: #ec8e2c;&quot;&gt;-=&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;true&lt;/span&gt;;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #8b949e;&quot;&gt;// Time Complexity: N&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #8b949e;&quot;&gt;// Space Complexity: N&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #79c0ff;&quot;&gt;console&lt;/span&gt;.&lt;span style=&quot;color: #d2a8ff;&quot;&gt;log&lt;/span&gt;(&lt;span style=&quot;color: #d2a8ff;&quot;&gt;validAnagram&lt;/span&gt;(&lt;span style=&quot;color: #a5d6ff;&quot;&gt;'aaz'&lt;/span&gt;, &lt;span style=&quot;color: #a5d6ff;&quot;&gt;'zza'&lt;/span&gt;)); &lt;span style=&quot;color: #8b949e;&quot;&gt;// false&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #79c0ff;&quot;&gt;console&lt;/span&gt;.&lt;span style=&quot;color: #d2a8ff;&quot;&gt;log&lt;/span&gt;(&lt;span style=&quot;color: #d2a8ff;&quot;&gt;validAnagram&lt;/span&gt;(&lt;span style=&quot;color: #a5d6ff;&quot;&gt;'anagram'&lt;/span&gt;, &lt;span style=&quot;color: #a5d6ff;&quot;&gt;'nagaram'&lt;/span&gt;)); &lt;span style=&quot;color: #8b949e;&quot;&gt;// true&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=24;fontColor=#FFFFFF;" vertex="1" parent="1">
                    <mxGeometry x="50" y="5740" width="950" height="720" as="geometry"/>
                </mxCell>
                <mxCell id="29" value="&lt;font color=&quot;#ff0080&quot;&gt;MULTIPLE POINTERS&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=24;fontColor=#FFFFFF;" vertex="1" parent="1">
                    <mxGeometry x="360" y="6650" width="270" height="40" as="geometry"/>
                </mxCell>
                <mxCell id="30" value="&lt;font color=&quot;#ffffff&quot;&gt;creating pointers or values that correspond to an&amp;nbsp;&lt;br&gt;index or position and move towards the beginnig,&amp;nbsp;&lt;br&gt;end or middle based on a certain condition&lt;br&gt;&lt;br&gt;Very efficient for solving problems&amp;nbsp;&lt;br&gt;with minimal space complexity as well&lt;br&gt;&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=24;fontColor=#FF0080;" vertex="1" parent="1">
                    <mxGeometry x="200" y="6700" width="550" height="190" as="geometry"/>
                </mxCell>
                <mxCell id="31" value="&lt;font color=&quot;#00ffff&quot;&gt;AN EXAMPLE&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=24;fontColor=#FFFFFF;" vertex="1" parent="1">
                    <mxGeometry x="370" y="6980" width="180" height="40" as="geometry"/>
                </mxCell>
                <mxCell id="32" value="&lt;font color=&quot;#ffffff&quot;&gt;Write a function called sumZero which accepts a sorted&amp;nbsp;&lt;br&gt;array of integers. The function should find the first pair&amp;nbsp;&lt;br&gt;where the sum is 0. Return an array that includes both&lt;br&gt;values that sum to zero or undefined if a pair does not exist&lt;br&gt;&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=24;fontColor=#00FFFF;" vertex="1" parent="1">
                    <mxGeometry x="150" y="7020" width="650" height="130" as="geometry"/>
                </mxCell>
                <mxCell id="33" value="&lt;div style=&quot;color: rgb(201, 209, 217); background-color: rgb(13, 17, 23); font-family: Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 14px; line-height: 19px;&quot;&gt;&lt;div&gt;&lt;span style=&quot;color: #d2a8ff;&quot;&gt;sumZero&lt;/span&gt;([&lt;span style=&quot;color: #ec8e2c;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color: #79c0ff;&quot;&gt;3&lt;/span&gt;, &lt;span style=&quot;color: #ec8e2c;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color: #79c0ff;&quot;&gt;2&lt;/span&gt;, &lt;span style=&quot;color: #ec8e2c;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color: #79c0ff;&quot;&gt;1&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;0&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;1&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;2&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;3&lt;/span&gt;]); &amp;nbsp; &amp;nbsp;&lt;span style=&quot;color: #8b949e;&quot;&gt;// [-3, 3]&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #d2a8ff;&quot;&gt;sumZero&lt;/span&gt;([&lt;span style=&quot;color: #ec8e2c;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color: #79c0ff;&quot;&gt;2&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;0&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;1&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;3&lt;/span&gt;]); &amp;nbsp; &lt;span style=&quot;color: #8b949e;&quot;&gt;// undefined&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #d2a8ff;&quot;&gt;sumZero&lt;/span&gt;([&lt;span style=&quot;color: #79c0ff;&quot;&gt;1&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;2&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;3&lt;/span&gt;]); &amp;nbsp; &lt;span style=&quot;color: #8b949e;&quot;&gt;// undefined&lt;/span&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=24;fontColor=#FFFFFF;" vertex="1" parent="1">
                    <mxGeometry x="240" y="7170" width="390" height="90" as="geometry"/>
                </mxCell>
                <mxCell id="34" value="&lt;font color=&quot;#00ffff&quot;&gt;NAIVE SOLUTION&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=24;fontColor=#FFFFFF;" vertex="1" parent="1">
                    <mxGeometry x="280" y="7290" width="220" height="40" as="geometry"/>
                </mxCell>
                <mxCell id="35" value="&lt;div style=&quot;color: rgb(201, 209, 217); background-color: rgb(13, 17, 23); font-family: Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 14px; line-height: 19px;&quot;&gt;&lt;div&gt;&lt;span style=&quot;color: #8b949e;&quot;&gt;// NAIV SOLUTION&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ec8e2c;&quot;&gt;function&lt;/span&gt; &lt;span style=&quot;color: #d2a8ff;&quot;&gt;sumZero&lt;/span&gt;(&lt;span style=&quot;color: #fdac54;&quot;&gt;arr&lt;/span&gt;){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;for&lt;/span&gt;(&lt;span style=&quot;color: #ec8e2c;&quot;&gt;let&lt;/span&gt; i&lt;span style=&quot;color: #ec8e2c;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: #79c0ff;&quot;&gt;0&lt;/span&gt;; i&lt;span style=&quot;color: #ec8e2c;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #fdac54;&quot;&gt;arr&lt;/span&gt;.&lt;span style=&quot;color: #79c0ff;&quot;&gt;length&lt;/span&gt;; i&lt;span style=&quot;color: #ec8e2c;&quot;&gt;++&lt;/span&gt;){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;for&lt;/span&gt;(&lt;span style=&quot;color: #ec8e2c;&quot;&gt;let&lt;/span&gt; j&lt;span style=&quot;color: #ec8e2c;&quot;&gt;=&lt;/span&gt;i&lt;span style=&quot;color: #ec8e2c;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color: #79c0ff;&quot;&gt;1&lt;/span&gt;; j &lt;span style=&quot;color: #ec8e2c;&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&quot;color: #fdac54;&quot;&gt;arr&lt;/span&gt;.&lt;span style=&quot;color: #79c0ff;&quot;&gt;length&lt;/span&gt;; j&lt;span style=&quot;color: #ec8e2c;&quot;&gt;++&lt;/span&gt;){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;if&lt;/span&gt;(&lt;span style=&quot;color: #fdac54;&quot;&gt;arr&lt;/span&gt;[i] &lt;span style=&quot;color: #ec8e2c;&quot;&gt;+&lt;/span&gt; &lt;span style=&quot;color: #fdac54;&quot;&gt;arr&lt;/span&gt;[j] &lt;span style=&quot;color: #ec8e2c;&quot;&gt;===&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;0&lt;/span&gt;){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;return&lt;/span&gt; [&lt;span style=&quot;color: #fdac54;&quot;&gt;arr&lt;/span&gt;[i], &lt;span style=&quot;color: #fdac54;&quot;&gt;arr&lt;/span&gt;[j]];&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #8b949e;&quot;&gt;// Time Complexity: O(n^2)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #8b949e;&quot;&gt;// Space Complexity: O(1)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #79c0ff;&quot;&gt;console&lt;/span&gt;.&lt;span style=&quot;color: #d2a8ff;&quot;&gt;log&lt;/span&gt;(&lt;span style=&quot;color: #d2a8ff;&quot;&gt;sumZero&lt;/span&gt;([&lt;span style=&quot;color: #ec8e2c;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color: #79c0ff;&quot;&gt;3&lt;/span&gt;, &lt;span style=&quot;color: #ec8e2c;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color: #79c0ff;&quot;&gt;2&lt;/span&gt;, &lt;span style=&quot;color: #ec8e2c;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color: #79c0ff;&quot;&gt;1&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;0&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;1&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;2&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;3&lt;/span&gt;]));&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #79c0ff;&quot;&gt;console&lt;/span&gt;.&lt;span style=&quot;color: #d2a8ff;&quot;&gt;log&lt;/span&gt;(&lt;span style=&quot;color: #d2a8ff;&quot;&gt;sumZero&lt;/span&gt;([&lt;span style=&quot;color: #ec8e2c;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color: #79c0ff;&quot;&gt;2&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;0&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;1&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;3&lt;/span&gt;]));&lt;/div&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=24;fontColor=#00FFFF;" vertex="1" parent="1">
                    <mxGeometry x="210" y="7340" width="390" height="280" as="geometry"/>
                </mxCell>
                <mxCell id="36" value="REFACTOR" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=24;fontColor=#00FFFF;" vertex="1" parent="1">
                    <mxGeometry x="290" y="7710" width="150" height="40" as="geometry"/>
                </mxCell>
                <mxCell id="37" value="&lt;div style=&quot;color: rgb(201, 209, 217); background-color: rgb(13, 17, 23); font-family: Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 14px; line-height: 19px;&quot;&gt;&lt;div&gt;&lt;span style=&quot;color: #8b949e;&quot;&gt;// REFACTOR&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #ec8e2c;&quot;&gt;function&lt;/span&gt; &lt;span style=&quot;color: #d2a8ff;&quot;&gt;sumZero1&lt;/span&gt;(&lt;span style=&quot;color: #fdac54;&quot;&gt;arr&lt;/span&gt;){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;let&lt;/span&gt; left &lt;span style=&quot;color: #ec8e2c;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;let&lt;/span&gt; right &lt;span style=&quot;color: #ec8e2c;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #fdac54;&quot;&gt;arr&lt;/span&gt;.&lt;span style=&quot;color: #79c0ff;&quot;&gt;length&lt;/span&gt; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color: #79c0ff;&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;while&lt;/span&gt;(left &lt;span style=&quot;color: #ec8e2c;&quot;&gt;&amp;lt;&lt;/span&gt; right){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;let&lt;/span&gt; sum &lt;span style=&quot;color: #ec8e2c;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #fdac54;&quot;&gt;arr&lt;/span&gt;[left] &lt;span style=&quot;color: #ec8e2c;&quot;&gt;+&lt;/span&gt; &lt;span style=&quot;color: #fdac54;&quot;&gt;arr&lt;/span&gt;[right];&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;if&lt;/span&gt;(sum &lt;span style=&quot;color: #ec8e2c;&quot;&gt;===&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;0&lt;/span&gt;){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;return&lt;/span&gt; [&lt;span style=&quot;color: #fdac54;&quot;&gt;arr&lt;/span&gt;[left], &lt;span style=&quot;color: #fdac54;&quot;&gt;arr&lt;/span&gt;[right]];&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; } &lt;span style=&quot;color: #ec8e2c;&quot;&gt;else&lt;/span&gt; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;if&lt;/span&gt;(sum &lt;span style=&quot;color: #ec8e2c;&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;0&lt;/span&gt;){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; right&lt;span style=&quot;color: #ec8e2c;&quot;&gt;--&lt;/span&gt;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; } &lt;span style=&quot;color: #ec8e2c;&quot;&gt;else&lt;/span&gt; {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; left&lt;span style=&quot;color: #ec8e2c;&quot;&gt;++&lt;/span&gt;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #8b949e;&quot;&gt;// Time Complexity: O(n)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #8b949e;&quot;&gt;// Space Complexity: O(1)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #79c0ff;&quot;&gt;console&lt;/span&gt;.&lt;span style=&quot;color: #d2a8ff;&quot;&gt;log&lt;/span&gt;(&lt;span style=&quot;color: #d2a8ff;&quot;&gt;sumZero1&lt;/span&gt;([&lt;span style=&quot;color: #ec8e2c;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color: #79c0ff;&quot;&gt;3&lt;/span&gt;, &lt;span style=&quot;color: #ec8e2c;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color: #79c0ff;&quot;&gt;2&lt;/span&gt;, &lt;span style=&quot;color: #ec8e2c;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color: #79c0ff;&quot;&gt;1&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;0&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;1&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;2&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;3&lt;/span&gt;]));&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #79c0ff;&quot;&gt;console&lt;/span&gt;.&lt;span style=&quot;color: #d2a8ff;&quot;&gt;log&lt;/span&gt;(&lt;span style=&quot;color: #d2a8ff;&quot;&gt;sumZero1&lt;/span&gt;([&lt;span style=&quot;color: #ec8e2c;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color: #79c0ff;&quot;&gt;2&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;0&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;1&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;3&lt;/span&gt;]));&lt;/div&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=24;fontColor=#00FFFF;" vertex="1" parent="1">
                    <mxGeometry x="200" y="7770" width="390" height="370" as="geometry"/>
                </mxCell>
                <mxCell id="38" value="countUniqueValues" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=24;fontColor=#00FFFF;" vertex="1" parent="1">
                    <mxGeometry x="280" y="8860" width="230" height="40" as="geometry"/>
                </mxCell>
                <mxCell id="39" value="&lt;font color=&quot;#ffffff&quot;&gt;Implement a function called countUniqueValues,&lt;br&gt;hich accepts a sorted array, and counts the&amp;nbsp;&lt;br&gt;unique values in the array. There can be negative&lt;br&gt;numbers in the array, but it will always be sorted.&lt;br&gt;&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=24;fontColor=#00FFFF;" vertex="1" parent="1">
                    <mxGeometry x="135" y="8900" width="550" height="130" as="geometry"/>
                </mxCell>
                <mxCell id="40" value="&lt;div style=&quot;color: rgb(201, 209, 217); background-color: rgb(13, 17, 23); font-family: Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 14px; line-height: 19px;&quot;&gt;&lt;div&gt;&lt;span style=&quot;color: #8b949e;&quot;&gt;// countUniqeValues([1, 1, 1, 1, 1, 2]); &amp;nbsp;// 2&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #8b949e;&quot;&gt;// countUniqeValues([1, 2, 3,4, 4, 4, 7, 7, 12, 12, 13]); // 7&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #8b949e;&quot;&gt;// countUniqeValues([]); // 0&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #8b949e;&quot;&gt;// countUniqeValues([-2, -1, -1, 0, 1]); &amp;nbsp;// 4&lt;/span&gt;&lt;/div&gt;&lt;br&gt;&lt;div&gt;&lt;span style=&quot;color: #ec8e2c;&quot;&gt;function&lt;/span&gt; &lt;span style=&quot;color: #d2a8ff;&quot;&gt;countUniqeValues&lt;/span&gt;(&lt;span style=&quot;color: #fdac54;&quot;&gt;arr&lt;/span&gt;){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;if&lt;/span&gt;(&lt;span style=&quot;color: #fdac54;&quot;&gt;arr&lt;/span&gt;.&lt;span style=&quot;color: #79c0ff;&quot;&gt;length&lt;/span&gt; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;===&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;0&lt;/span&gt;) &lt;span style=&quot;color: #ec8e2c;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;var&lt;/span&gt; i &lt;span style=&quot;color: #ec8e2c;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;for&lt;/span&gt;(&lt;span style=&quot;color: #ec8e2c;&quot;&gt;var&lt;/span&gt; j &lt;span style=&quot;color: #ec8e2c;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;1&lt;/span&gt;; j &lt;span style=&quot;color: #ec8e2c;&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&quot;color: #fdac54;&quot;&gt;arr&lt;/span&gt;.&lt;span style=&quot;color: #79c0ff;&quot;&gt;length&lt;/span&gt;; j&lt;span style=&quot;color: #ec8e2c;&quot;&gt;++&lt;/span&gt;){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;if&lt;/span&gt;(&lt;span style=&quot;color: #fdac54;&quot;&gt;arr&lt;/span&gt;[i] &lt;span style=&quot;color: #ec8e2c;&quot;&gt;!==&lt;/span&gt; &lt;span style=&quot;color: #fdac54;&quot;&gt;arr&lt;/span&gt;[j]){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; i&lt;span style=&quot;color: #ec8e2c;&quot;&gt;++&lt;/span&gt;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #fdac54;&quot;&gt;arr&lt;/span&gt;[i] &lt;span style=&quot;color: #ec8e2c;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #fdac54;&quot;&gt;arr&lt;/span&gt;[j];&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: #8b949e;&quot;&gt;// console.log(i, j); &amp;nbsp;// this will show the position of i and j&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &lt;span style=&quot;color: #ec8e2c;&quot;&gt;return&lt;/span&gt; i &lt;span style=&quot;color: #ec8e2c;&quot;&gt;+&lt;/span&gt; &lt;span style=&quot;color: #79c0ff;&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #8b949e;&quot;&gt;// Time complexity: O(N)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #8b949e;&quot;&gt;// Space complexity: O(1)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #79c0ff;&quot;&gt;console&lt;/span&gt;.&lt;span style=&quot;color: #d2a8ff;&quot;&gt;log&lt;/span&gt;(&lt;span style=&quot;color: #d2a8ff;&quot;&gt;countUniqeValues&lt;/span&gt;([&lt;span style=&quot;color: #79c0ff;&quot;&gt;1&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;1&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;1&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;1&lt;/span&gt;,&lt;span style=&quot;color: #79c0ff;&quot;&gt;2&lt;/span&gt;]));&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #79c0ff;&quot;&gt;console&lt;/span&gt;.&lt;span style=&quot;color: #d2a8ff;&quot;&gt;log&lt;/span&gt;(&lt;span style=&quot;color: #d2a8ff;&quot;&gt;countUniqeValues&lt;/span&gt;([&lt;span style=&quot;color: #79c0ff;&quot;&gt;1&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;2&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;3&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;3&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;5&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;5&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;8&lt;/span&gt;, &lt;span style=&quot;color: #79c0ff;&quot;&gt;9&lt;/span&gt;]));&lt;/div&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=24;fontColor=#FFFFFF;" vertex="1" parent="1">
                    <mxGeometry x="135" y="9050" width="550" height="410" as="geometry"/>
                </mxCell>
                <mxCell id="41" value="&lt;font color=&quot;#ffff00&quot;&gt;SLIDING WINDOW&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=24;fontColor=#FFFFFF;" vertex="1" parent="1">
                    <mxGeometry x="325" y="9940" width="230" height="40" as="geometry"/>
                </mxCell>
                <mxCell id="42" value="&lt;font color=&quot;#ffffff&quot;&gt;This pattern involves creating a&amp;nbsp;&lt;br&gt;window which can either be an array of&amp;nbsp;&lt;br&gt;number from one position to another&lt;br&gt;&lt;br&gt;Depending&amp;nbsp; on a certain condition, the&amp;nbsp;&lt;br&gt;window either increases or closes (and a&amp;nbsp;&lt;br&gt;new window is created)&lt;br&gt;&lt;br&gt;Very useful for keeping track of a subset of&amp;nbsp;&lt;br&gt;data in an array/string etc.&lt;br&gt;&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=24;fontColor=#FFFF00;" vertex="1" parent="1">
                    <mxGeometry x="210" y="10010" width="480" height="300" as="geometry"/>
                </mxCell>
            </root>
        </mxGraphModel>
    </diagram>
</mxfile>